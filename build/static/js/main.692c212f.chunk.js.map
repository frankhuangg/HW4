{"version":3,"sources":["HW5.js","reportWebVitals.js","index.js"],"names":["UserGithub","props","state","id","name","login","html_url","avatarUrl","node_id","gists_url","$","get","this","source","result","data","setState","avatar_url","src","href","React","Component","ReactDOM","render","document","getElementById","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"+OAGMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACDC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAW,IATR,E,qDAanB,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKX,MAAMY,QAAQ,SAACC,GAEtB,IAAMC,EAAOD,EACTC,GACA,EAAKC,SAAS,CACVb,GAAIY,EAAKZ,GACTC,KAAMW,EAAKX,KACXC,MAAOU,EAAKV,MACZC,SAAUS,EAAKT,SACfC,UAAWQ,EAAKE,WAChBT,QAASO,EAAKP,QACdC,UAAWM,EAAKN,iB,kCAMhC,c,oBAIA,WACI,OACI,gCACI,qCAAQG,KAAKV,MAAMC,MACnB,uCAAUS,KAAKV,MAAME,QACrB,qBAAKc,IAAKN,KAAKV,MAAMK,YACrB,yCAAYK,KAAKV,MAAMM,WACvB,4CAAc,oBAAGW,KAAMP,KAAKV,MAAMI,SAApB,mCAAoD,6BAClE,mBAAGa,KAAMP,KAAKV,MAAMO,UAApB,8B,GA5CSW,IAAMC,WAmD/BC,IAASC,OACL,cAAC,EAAD,CAAYV,OAAO,6CACnBW,SAASC,eAAe,S,OCxDJ,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,K","file":"static/js/main.692c212f.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport $ from 'jquery'\r\nclass UserGithub extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                    id: '',\r\n                    name: '',\r\n                    login: '',\r\n                    html_url: '',\r\n                    avatarUrl: '',\r\n                    node_id: '',\r\n                    gists_url: ''\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        $.get(this.props.source, (result) => {\r\n            // console.log(result);\r\n            const data = result;\r\n            if (data) {\r\n                this.setState({\r\n                    id: data.id,\r\n                    name: data.name,\r\n                    login: data.login,\r\n                    html_url: data.html_url,\r\n                    avatarUrl: data.avatar_url,\r\n                    node_id: data.node_id,\r\n                    gists_url: data.gists_url,\r\n                });\r\n            }\r\n        });\r\n    } \r\n\r\n    componentWillUnmount(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>ID:{this.state.id}</h3>\r\n                <h3>Name:{this.state.name}</h3>\r\n                <img src={this.state.avatarUrl} />\r\n                <h3>NodeID:{this.state.node_id}</h3>\r\n                <h3>My GitHub:<a href={this.state.html_url}>GitHub.com/frankhuangg<br></br></a></h3>\r\n                <a href={this.state.gists_url}>gists_url</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <UserGithub source=\"https://api.github.com/users/frankhuangg\" />,\r\n    document.getElementById('root')\r\n);\r\nexport default UserGithub;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport HW5 from './HW5.js';\nimport UserGithub from './HW5';\n\n\n// ReactDOM.render(\n//   <UserGithub source=\"https://api.github.com/users/frankhuangg\" />,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}